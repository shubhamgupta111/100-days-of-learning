Q. Parenthesis Checker

Sol.
#include<bits/stdc++.h>
using namespace std;
class Solution
{
    public:
    bool ispar(string x)
    {
        stack<char> s;
        char ch;
        for(int i=0;i<x.length();i++)
        {
            if(x[i]=='(' || x[i]=='[' || x[i]=='{')
            {
                s.push(x[i]);
                continue;
            }
            if(s.empty())
            return false;
            switch(x[i])
            {
                case ')':
                ch=s.top();
                s.pop();
                if(ch=='{' || ch=='[')
                return false;
                break;
                case '}':
                ch=s.top();
                s.pop();
                if(ch=='(' || ch=='[')
                return false;
                break;
                case ']':
                ch=s.top();
                s.pop();
                if(ch=='(' || ch=='{')
                return false;
                break;
            }
        }
         return (s.empty());
    }
};
int main()
{
   int t;
   string a;
   cin>>t;
   while(t--)
   {
       cin>>a;
       Solution obj;
       if(obj.ispar(a))
        cout<<"balanced"<<endl;
       else
        cout<<"not balanced"<<endl;
   }
}  
